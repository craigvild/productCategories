// Mens/Womens Categories

var c = utag_data.product_category;
var q = utag_data.product_quantity;
var p = utag_data.product_unit_price;
var menswearSpend = 0;
var womenswearSpend = 0;

for(i=0;i<c.length;i++){
  if(c[i]=='Menswear'){
    menswearSpend = menswearSpend + parseFloat(q[i])*parseFloat(p[i]);
  }
}

for(i=0;i<c.length;i++){
  if(c[i]=='Womenswear'){
    womenswearSpend = womenswearSpend + parseFloat(q[i])*parseFloat(p[i]);
  }
}
// window.alert("Womens: " + womenswearSpend + "Mens: " + menswearSpend);

utag.link({event_name: "purchase_totals", mens_spend: menswearSpend, womens_spend: womenswearSpend});


// Add the Javascript Code extension to set total_menswear and total_womenswear:

b.product_quantity = b.product_quantity || [];
b.product_price = b.product_price || [];
b.product_category_m_w = b.product_category_m_w || [];

if (b.product_quantity.length === b.product_price.length &&
    b.product_quantity.length === b.product_category_m_w.length &&
    b.product_price.length === b.product_category_m_w.length){

    b.total_menswear = 0;
    b.total_womenswear = 0;
    for (var i=0; i<b.product_price.length; i++){
        if (b.product_category_m_w[i].toLowerCase() === "menswear")
            b.total_menswear += b.product_quantity[i] * b.product_price[i];
        else if (b.product_category_m_w[i].toLowerCase() === "womenswear")    
            b.total_womenswear += b.product_quantity[i] * b.product_price[i];
    }
}

// Subtotal mens/women’s categories

var order_subtotal_men_category = 0;
var order_subtotal_women_category = 0;

for (var index = 0; index < b.product_sku.length; index++) {
    var sku = b.product_sku[index];
    
    // If SKU first letter is m then is a product from men categories
    if (sku !== undefined && sku[0] == 'm') {
        order_subtotal_men_category += parseFloat(b.product_price[index]) * parseFloat(b.product_quantity[index]);
    }
    
    // If SKU first letter is w then is a product from women categories
    if (sku !== undefined && sku[0] == 'w') {
        order_subtotal_women_category += parseFloat(b.product_price[index]) * parseFloat(b.product_quantity[index]);
    }
}

b.order_subtotal_men_category = order_subtotal_men_category.toString();
b.order_subtotal_women_category = order_subtotal_women_category.toString();

//welcome message first name / last name

var welcomeMessage = document.querySelector(".welcome-msg");

if (welcomeMessage && welcomeMessage.innerText) {
    var message = welcomeMessage.innerText.split(",");
    
    if (message.length > 1) {
        var fullName = message[1].trim();
        
        var fullNameArray = fullName.split(" ");
        var fullNameArrayLength = fullNameArray.length;
        
        if (fullNameArrayLength == 1) {
            window.localStorage.setItem('customer_first_name', fullNameArray[0].replace("!", ""));
        } else if (fullNameArrayLength > 1) {
            window.localStorage.setItem('customer_first_name', fullNameArray[0].replace("!", ""));
            window.localStorage.setItem('customer_last_name', fullNameArray[fullNameArrayLength - 1].replace("!", ""));
        }
    } else {
        window.localStorage.removeItem('customer_first_name');
        window.localStorage.removeItem('customer_last_name');
    }
}


// another mens/womens category


var currentWomensTotal = 0; 
var currentMensTotal = 0;

for (i=0; i< b.product_sku.length;i++){     // loop through product SKUs from current order
    if (b.product_sku[i].startsWith("w")){  // product is womenswear
        currentWomensTotal += b.product_price[i] * b.product_quantity[i];
    }
    if (b.product_sku[i].startsWith("m")){  // product is menswear
        currentMensTotal += b.product_price[i] * b.product_quantity[i];
    }
}

b.womenswear_total = currentWomensTotal;
b.menswear_total = currentMensTotal;

console.log(b.menswear_total);
console.log(b.womenswear_total);


// More JS for categories:

(function() {
    if (utag.data.product_sku !== 'undefined' && utag.data.product_sku.length > 0) {
        
        function setProductCategories() {
            // unlikely - but if the product_category is not in the DL then initiate it
            if (utag.data.product_category === 'undefined') {
                utag.data.product_category = [];
            }
                
            for (i=0; i<utag.data.product_sku.length; i++) {
                var sku = utag.data.product_sku[i].toLowerCase(),
                    firstLetter = sku.substring(0,1),
                    category = null;
                
                switch (firstLetter) {
                    case 'w':
                        category = 'womens';
                        break;
                    case 'm':
                        category = 'mens';
                        break;
                    case 'a':
                        category = 'accessories';
                        break;
                    case 'h':
                        category = 'home';
                        break;
                }
                
                // add category to DL with same index as sku
                utag.data.product_category[i] = category;
            }
        }

        function setCategoryTotals() {
            var categoryArray = [];

            // construct associative array for ease of distinction
            for (i=0; i<utag.data.product_category.length; i++) {
                var category = utag.data.product_category[i];
                utag.data.category_names = [];
                utag.data.category_totals = [];

                if (category !== 'undefined') {
                    price = parseFloat(utag.data.product_price[i]),
                    quantity = parseInt(utag.data.product_quantity[i]),
                    productTotal = price*quantity.toFixed(2),
                    totalPrice = (category in categoryArray) ? parseFloat(categoryArray[category]) : 0;
                    categoryArray[category] = parseFloat(totalPrice + productTotal);
                }
            }

            // add categories and totals to DL
            for (var key in categoryArray) {
                if (categoryArray.hasOwnProperty(key)) {
                    utag.data.category_names.push(key);
                    utag.data.category_totals.push(categoryArray[key].toString());
                }
            }
        }

        setProductCategories();
        setCategoryTotals();
    }
})();


/* Mens/womens categories. After he’s indexed the gender of the product with another variable based on product_sku value

// Here we set all the data layer variables we need to perform calculation of category ltv. */

// Variables set:
// product_category_order_totals
// product_final_cost
// product_category




//cat values
var general_categories = [];
if(b['product_sku']){
    b['product_sku'].forEach(function (item){
        general_categories.push(item.charAt(0));
    });
}
utag_data.product_category = general_categories;

//final cost
var final_cost = [];
if(b['product_unit_price'] && b['product_quantity']){
    utag.data.product_unit_price.forEach(function(item, index){
      var price = parseFloat(item),
          quantity = parseInt(utag.data.product_quantity[index]);
        final_cost.push(price * quantity);

    })
}

//cat order totals
var mIndex = 0, 
wIndex = 1,
aIndex = 2,
hIndex = 3;
var catTotals = [0,0,0,0];
b['product_category'].forEach(function(cat, index){
    switch(cat){
        case "m":
            catTotals[mIndex] += final_cost[index];
        break;
        case "w":
            catTotals[wIndex] += final_cost[index];
        break;
        case "a":
            catTotals[aIndex] += final_cost[index];
        break;
        case "h":
            catTotals[hIndex] += final_cost[index];
        break;
    }
});
console.log(catTotals, final_cost);


utag_data.product_category_order_totals = catTotals;


